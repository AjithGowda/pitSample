{"id":389871,"xmlId":"org.intellij.scala","name":"Scala","description":"\n        \n        Adds support for the Scala language. The following features are available for free with IntelliJ IDEA Community Edition:\n        <br>\n        <ul>\n          <li>Coding assistance (highlighting, completion, formatting, refactorings, etc.)</li>\n          <li>Navigation, search, information about types and implicits</li>\n          <li>Integration with sbt and other build tools</li>\n          <li>Testing frameworks support (ScalaTest, Specs2, uTest)</li>\n          <li>Scala debugger, worksheets and Ammonite scripts</li>\n        </ul>\n        <br>\n        Support for Play Framework, Akka and Scala.js is enabled in IntelliJ IDEA Ultimate.\n      \n    ","organization":"JetBrains s.r.o.","tags":["Programming Language"],"vendor":"JetBrains","version":"2023.1.23","notes":"<h2>Resolved issues</h2>\n<h3>2023.1.23</h3>\n<ul>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21554\">SCL-21554</a></strong>: can't compiler project with \"-language:_\" compiler option</li>\n</ul>\n<h3>2023.1.19</h3>\n<ul>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21218\">SCL-21218</a></strong>: Decompilers: no () in primary constructor annotation even if there are parameters</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21198\">SCL-21198</a></strong>: Tasty reader: quote ids more reliably</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21206\">SCL-21206</a></strong>: Tasty reader: don't add class type parameters as auxiliary constructor parameters</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21208\">SCL-21208</a></strong>: Tasty reader: parse ANDtype and ORtype</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21192\">SCL-21192</a></strong>: Decompiler: no singleton types for case objects</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21214\">SCL-21214</a></strong>: Tasty reader: no wildcard type argument bounds</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21219\">SCL-21219</a></strong>: Decompiler: objects in type refinements</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21220\">SCL-21220</a></strong>: Decompiler: annotations in type refinements</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21222\">SCL-21222</a></strong>: Decompilers: @BeanProperty class parameters</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21228\">SCL-21228</a></strong>: Decompiler: lazy vals in type refinements</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21237\">SCL-21237</a></strong>: Tasty reader: \"then\" keyword</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21111\">SCL-21111</a></strong>: Proto messages with keyword field (eg, `macro`) does not resolve</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20672\">SCL-20672</a></strong>: Prettify and unify Scala 2 decompiler output</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21209\">SCL-21209</a></strong>: Decompilers: quotes for =&gt; and =&gt;&gt;</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21233\">SCL-21233</a></strong>: Decompiler: ``.this in refinement types</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21234\">SCL-21234</a></strong>: Decompiler: keep non-synthetic $default$ methods</li>\n</ul>\n<h3>2023.1.18</h3>\n<ul>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-19608\">SCL-19608</a></strong>: @ApiStatus.Internal or @ApiStatus.Experimental annotations inspection shouldn't be triggered in the same module with the annotated entity</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21020\">SCL-21020</a></strong>: Documentation of inspection is wrong</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21140\">SCL-21140</a></strong>: Good code red: Scala 3, abstract override</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21114\">SCL-21114</a></strong>: Scala spellcheck parser underline is shifted right 1 symbol when \\n is in the string</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21143\">SCL-21143</a></strong>: sbt-shell opens dependency project (wrong working directory)</li>\n</ul>\n<h3>2023.1.16</h3>\n<ul>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21110\">SCL-21110</a></strong>: False error highlighting for akka-http 'Http' object</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21109\">SCL-21109</a></strong>: Combination of context bounds with \"using\" clause breaks implicit resolution and type inference</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21105\">SCL-21105</a></strong>: Syntax highlighting for Scala Worksheets is not always working</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21079\">SCL-21079</a></strong>: scala3: can't resolve given definition from jar file (but can resolve from source file)</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21053\">SCL-21053</a></strong>: Type inference breaks when using givens in extensions</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21060\">SCL-21060</a></strong>: scala3: support resolution of extension methods for opaque types (from companion object)</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20948\">SCL-20948</a></strong>: Good code red for upper bound Tuple</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21084\">SCL-21084</a></strong>: Scala3: neither `extension` nor `implicit class` extensions work with `T &lt;: Tuple` bounds</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21121\">SCL-21121</a></strong>: Importing cross modules from Mill build has stopped working</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21108\">SCL-21108</a></strong>: Scala compile servers continuous errors: Exception in thread NGServer with java 20</li>\n</ul>\n<h3>2023.1.15</h3>\n<ul>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21098\">SCL-21098</a></strong>: worksheets: disable code author hints, they break code input/output alignment</li>\n</ul>\n<h3>2023.1.13</h3>\n<ul>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21065\">SCL-21065</a></strong>: Error: Bloop is not configured for BSP workspace when importing sbt project via bloop</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21081\">SCL-21081</a></strong>: scala3: parsing of tuple pattern in for comprehension is broken</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20970\">SCL-20970</a></strong>: Scala compile server reading wrong project default JDK</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21057\">SCL-21057</a></strong>: scalaVersion &amp; scalacOptions completion doesn't work in sbt files in bsp project</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21058\">SCL-21058</a></strong>: sbt project view: show standard \"sources set\" when creating new directory in module root (for BSP / SBT project)</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20505\">SCL-20505</a></strong>: * wildcard imports not supported in SBT build files (which use -Xsource:3 since sbt 1.6)</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20672\">SCL-20672</a></strong>: Prettify and unify Scala 2 decompiler output</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21066\">SCL-21066</a></strong>: TastyReader: annotation type arguments</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21037\">SCL-21037</a></strong>: Decompiler: use unambiguous absolute paths whenever possible</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21068\">SCL-21068</a></strong>: Don't check accessibility for references in compiled files</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21067\">SCL-21067</a></strong>: Decompilers: exclude private primary constructor parameters</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20768\">SCL-20768</a></strong>: unused declaration inspection: detect usages in plugin `*.xml` files</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21056\">SCL-21056</a></strong>: Our status bar widgets do not have tooltips anymore</li>\n</ul>\n<h3>2023.1.11</h3>\n<ul>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-5595\">SCL-5595</a></strong>: Scala plugin: not showing implementing methods</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21048\">SCL-21048</a></strong>: scala-cli: disable \"Package name doesn't correspond to the file path\" inspection for scala files</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20963\">SCL-20963</a></strong>: Use Zinc incremental compiler by default</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21052\">SCL-21052</a></strong>: Go to template gutter missing for Play projects (again)</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21050\">SCL-21050</a></strong>: Don't re-resolve references in compiled files</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20505\">SCL-20505</a></strong>: * wildcard imports not supported in SBT build files (which use -Xsource:3 since sbt 1.6)</li>\n</ul>\n<h3>2023.1.10</h3>\n<ul>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20917\">SCL-20917</a></strong>: scala3: exported members from class constructor prameters are not resolved</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20862\">SCL-20862</a></strong>: scala3: support context bound type parameters in traits</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20936\">SCL-20936</a></strong>: Please allow sbt launcher command line parameters (in addition to VM parameters)</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20805\">SCL-20805</a></strong>: Attempt splitting a `compile-server` module out of the `compiler-jps` module</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21036\">SCL-21036</a></strong>: Exception due to AddBracesIntention preview</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20919\">SCL-20919</a></strong>: extensions (and implicit classes) that require implicit (given) parameters with type arguments are not understood</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-18853\">SCL-18853</a></strong>: Valid code shows as invalid</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-19820\">SCL-19820</a></strong>: IntelliJ fails to infer types from overloaded- and apply extension methods</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20701\">SCL-20701</a></strong>: lose type hints if overloaded in extensions.</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20770\">SCL-20770</a></strong>: Do not run can-be-private and unused-declaration inspections in Scala Fragment editor for injected code</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20672\">SCL-20672</a></strong>: Prettify and unify Scala 2 decompiler output</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21037\">SCL-21037</a></strong>: Decompiler: use unambiguous absolute paths whenever possible</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21033\">SCL-21033</a></strong>: Always resolve _root_ to the root package</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-18670\">SCL-18670</a></strong>: regression, scala.concurrent.duration._ postfix operators all read</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20233\">SCL-20233</a></strong>: Trailing commas in .sbt files are marked as error sometimes</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21042\">SCL-21042</a></strong>: When importing a project with BSP IntelliJ can't resolve symbols in sbt files in subprojects</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20978\">SCL-20978</a></strong>: Opening an sbt project for the first time use both Build tool window and sbt shell</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-19965\">SCL-19965</a></strong>: bsp toolwindow missing when opening a project via project from existing sources</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20705\">SCL-20705</a></strong>: Migrate from java.awt.Insets to com.intellij.util.ui.JBInsets</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20706\">SCL-20706</a></strong>: Migrate from javax.swing.border.EmptyBorder to com.intellij.util.ui.JBEmptyBorder</li>\n</ul>\n<h3>2023.1.9</h3>\n<ul>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-16986\">SCL-16986</a></strong>: Type Hierarchy doesn't include types extending a type alias</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-8698\">SCL-8698</a></strong>: Find usages doesn't search inside build.sbt</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21009\">SCL-21009</a></strong>: junit: navigate to test method which is mixed from a trait navigates to a wrong file</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21012\">SCL-21012</a></strong>: Result of find usages with bytecode indices is not shown: Read access is allowed from inside read-action exception</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21021\">SCL-21021</a></strong>: Implicit conversion auto-import: support function types</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21022\">SCL-21022</a></strong>: Infix, tuple, and function supertypes</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21023\">SCL-21023</a></strong>: Qualified this is not resolved if there's an inline method</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20927\">SCL-20927</a></strong>: Add support for compiling old Scala projects using modern JDKs in the Scala Compile Server</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20970\">SCL-20970</a></strong>: Scala compile server reading wrong project default JDK</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20805\">SCL-20805</a></strong>: Attempt splitting a `compile-server` module out of the `compiler-jps` module</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20959\">SCL-20959</a></strong>: Exception with Scala 3 worksheets</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20672\">SCL-20672</a></strong>: Prettify and unify Scala 2 decompiler output</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21010\">SCL-21010</a></strong>: Crossbuild code in shared doesn't recognise code in jvm lib jar</li>\n</ul>\n<h3>2023.1.8</h3>\n<ul>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/IDEA-215147\">IDEA-215147</a></strong>: Detect common formats of string values when suggesting variable names</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20986\">SCL-20986</a></strong>: Use compiler warnings to mark imports as unused in Scala 3.3</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-18457\">SCL-18457</a></strong>: wrong range exception in absolute import inspection</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-21007\">SCL-21007</a></strong>: ScalaAnnotator: IndexNotReadyException</li>\n</ul>\n<h3>2023.1.7</h3>\n<ul>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20976\">SCL-20976</a></strong>: Project View: respect the error highlighting setting</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20837\">SCL-20837</a></strong>: Mill build project no longer works</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20768\">SCL-20768</a></strong>: unused declaration inspection: detect usages in plugin `*.xml` files</li>\n</ul>\n<h3>2023.1.6</h3>\n<ul>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20064\">SCL-20064</a></strong>: jdk18: deprecated method called by nailgun</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-13814\">SCL-13814</a></strong>: handle type annotations in \"Convert parameter to underscore section\" intention action</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-19762\">SCL-19762</a></strong>: add scaladoc intention breaks indentation (and compilation) for scala 3</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20927\">SCL-20927</a></strong>: Add support for compiling old Scala projects using modern JDKs in the Scala Compile Server</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20805\">SCL-20805</a></strong>: Attempt splitting a `compile-server` module out of the `compiler-jps` module</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20370\">SCL-20370</a></strong>: No type inference for type variables</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20790\">SCL-20790</a></strong>: ArgumentToBlockExpressionIntention: support fewer-braces</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20781\">SCL-20781</a></strong>: UnnecessaryPartialFunctionQuickFix: handle fewer braces</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20792\">SCL-20792</a></strong>: FlipComparisonInInfixExprIntention: support fewer-braces</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20794\">SCL-20794</a></strong>: MergeElseIfIntention: support fewer-braces</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20802\">SCL-20802</a></strong>: RemoveApplyIntention: support fewer-braces</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20823\">SCL-20823</a></strong>: CanonizeBlockArgument: support fewer-braces</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-18177\">SCL-18177</a></strong>: Scala - Generate Code | equals() and hascode() generates invalid code if the class contains a field named \"state\"</li>\n</ul>\n<h3>2023.1.4</h3>\n<ul>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20940\">SCL-20940</a></strong>: Package name inspection &amp; package prefix bug</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20939\">SCL-20939</a></strong>: Reduce the nailgun thread pool to 0 long-running threads for the Scala Compile Server</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20923\">SCL-20923</a></strong>: Autocompletion does not work for Universal Apply Methods in scala3</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20905\">SCL-20905</a></strong>: Decompile Scala to Java stopped working</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20944\">SCL-20944</a></strong>: Get rid of \"Decompile Scala to Java\" action in favor of \"Show Decompiled Class As Java\" action</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20927\">SCL-20927</a></strong>: Add support for compiling old Scala projects using modern JDKs in the Scala Compile Server</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20752\">SCL-20752</a></strong>: can be private inspection: support complex pattern definitions in val/var</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20949\">SCL-20949</a></strong>: \"Show Scala tests\" button disappeared in the Structure tool window after upgade to 2022.3.1</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20796\">SCL-20796</a></strong>: Worksheet: support fewer-braces</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20805\">SCL-20805</a></strong>: Attempt splitting a `compile-server` module out of the `compiler-jps` module</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20859\">SCL-20859</a></strong>: Unused declaration settings not shown: InspectionOptionsComboboxPanel: cannot add to layout: constraints must be a GridBagConstraint</li>\n</ul>\n<h3>2023.1.3</h3>\n<ul>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20931\">SCL-20931</a></strong>: Create new project: scala\\sbt sbt and scala versions dropdowns are empty</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20927\">SCL-20927</a></strong>: Add support for compiling old Scala projects using modern JDKs in the Scala Compile Server</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-19495\">SCL-19495</a></strong>: Library navigation doesn't work and standard library is mishighlighted when working on a project with `-Xsource:3` + `-P:kind-projector:underscore-placeholders`</li>\n<li><strong><a href=\"https://youtrack.jetbrains.com/issue/SCL-20926\">SCL-20926</a></strong>: can be private: quick fix applied to protected member breaks line indentation</li>\n</ul>\n","dependencies":["com.intellij.modules.java"],"optionalDependencies":["org.jetbrains.idea.maven","org.intellij.intelliLang","com.intellij.copyright","com.intellij.java-i18n","com.intellij.properties","com.intellij.gradle","org.jetbrains.android","org.jetbrains.java.decompiler","DevKit","com.intellij.completion.ml.ranking","com.jetbrains.packagesearch.intellij-plugin","Coverage","com.intellij.css","com.intellij.modules.ultimate","JavaScript","JavaScriptDebugger","com.jetbrains.performancePlugin","JUnit","org.jetbrains.plugins.terminal"],"since":"231.7665","until":"231.*","size":79741509,"url":"https://confluence.jetbrains.com/display/SCA/Scala+Plugin+for+IntelliJ+IDEA","sourceCodeUrl":"https://github.com/JetBrains/intellij-scala"}